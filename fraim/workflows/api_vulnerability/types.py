# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Resourcely Inc.

"""
API Vulnerability Assessment Types

Pydantic models and dataclasses for API vulnerability assessment workflow.
"""

from dataclasses import dataclass
from typing import Annotated, Any, Dict, List, Optional

from pydantic import BaseModel

from fraim.config import Config
from fraim.core.workflows.workflow import WorkflowInput


# Pydantic models for OWASP API Security Analysis
class CodeEvidence(BaseModel):
    file_path: str
    line_number: int
    code_snippet: str
    pattern_type: str


class Vulnerability(BaseModel):
    owasp_category: str  # API1:2023 through API10:2023
    vulnerability_title: str
    description: str
    affected_endpoints: List[str]
    code_evidence: List[CodeEvidence]
    risk_level: str  # critical|high|medium|low
    confidence: float
    remediation_advice: str


class SecurityControl(BaseModel):
    # authentication|authorization|rate_limiting|input_validation|encryption|logging
    control_type: str
    implementation: str
    endpoints_covered: List[str]
    effectiveness: str  # strong|moderate|weak


class SecuritySummary(BaseModel):
    total_vulnerabilities: int
    critical_count: int
    high_count: int
    medium_count: int
    low_count: int
    overall_security_posture: str  # strong|moderate|weak
    confidence_score: float


class VulnerabilityAssessmentResult(BaseModel):
    vulnerabilities: List[Vulnerability]
    security_controls_present: List[SecurityControl]
    summary: SecuritySummary


@dataclass
class ApiVulnerabilityInput(WorkflowInput):
    """Input for the API Vulnerability Assessment workflow."""

    api_interface_findings: Annotated[
        str, {"help": "JSON string containing API interface discovery findings"}
    ]

    project_path: Annotated[
        Optional[str], {"help": "Path to the project for code analysis tools"}
    ] = None


@dataclass
class VulnerabilityAssessmentAgentInput:
    """Input for analyzing API interface findings for OWASP vulnerabilities."""

    api_interface_findings: str  # JSON string of API interface discovery results
    project_path: Optional[str]  # Path to project for tools
    config: Config
